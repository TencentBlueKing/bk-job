/*
 * Tencent is pleased to support the open source community by making BK-JOB蓝鲸智云作业平台 available.
 *
 * Copyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.
 *
 * BK-JOB蓝鲸智云作业平台 is licensed under the MIT License.
 *
 * License for BK-JOB蓝鲸智云作业平台:
 * --------------------------------------------------------------------
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
 * to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of
 * the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO
 * THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
apply plugin: 'nu.studer.jooq'

dependencies {
    api "org.jooq:jooq"
    jooqRuntime "mysql:mysql-connector-java"
}

def nameArr = name.split('-')
def moduleName = ''
def simpleModuleName = ''
for (int i = 1; i < nameArr.size(); i++) {
    moduleName += nameArr[i] + "_"
    if (i > 1) {
        simpleModuleName += nameArr[i] + "_"
    }
}

//去除末尾下划线
moduleName = moduleName.substring(0, moduleName.length() - 1)
simpleModuleName = simpleModuleName.substring(0, simpleModuleName.length() - 1)
println("moduleName=" + moduleName)
println("simpleModuleName=" + simpleModuleName)
def databaseName = moduleName
def targetPackageName = "com.tencent.bk.job." + simpleModuleName + ".model"

jooq {
    genenrate(sourceSets.main) {

        jdbc {
            driver = 'com.mysql.cj.jdbc.Driver'
            def mysqlURL = System.getProperty("mysqlURL")
            def mysqlUser = System.getProperty("mysqlUser")
            def mysqlPasswd = System.getProperty("mysqlPasswd")

            if (mysqlURL == null) {
                mysqlURL = System.getenv("mysqlURL")
                mysqlUser = System.getenv("mysqlUser")
                mysqlPasswd = System.getenv("mysqlPasswd")
            }

            if (mysqlURL == null) {
                println "use default mysql database."
                mysqlURL = DB_HOST
                mysqlUser = DB_USERNAME
                mysqlPasswd = DB_PASSWORD
            }

            println("mysqlURL=" + mysqlURL)
            println("mysqlUser=" + mysqlUser)
            url = "jdbc:mysql://${mysqlURL}/${databaseName}?useSSL=false&serverTimezone=UTC"
            user = mysqlUser
            password = mysqlPasswd
        }

        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = "${databaseName}"
            }

            generate {
                relations = false
                deprecated = false
                fluentSetters = true
                generatedAnnotation = false
                javaTimeTypes = true
            }

            target {
                packageName = "${targetPackageName}"
                encoding = 'UTF-8'
            }
        }
    }
}
