{{- if .Values.migration.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.fullname" . }}-migration-{{ .Chart.Version }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: "job-migration"
    {{ include "job.labelKeys.imageTag" . }}: {{ .Values.migration.image.tag | quote }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
        app.kubernetes.io/component: "job-migration"
    spec:
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.hostAliases "context" $) | nindent 8 }}
      initContainers:
        - name: wait-mariadb
          image: {{ include "common.images.image" (dict "imageRoot" .Values.migrationInit.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.migrationInit.image.pullPolicy }}
          command: ['sh', '-c', 'until nc -zw3 {{ include "job.mariadb.host" . }} {{ include "job.mariadb.port" . }}; do echo waiting for mariadb; sleep 2; done']
          resources:
            {{- toYaml .Values.migrationInit.resources | nindent 12 }}
      containers:
        - name: "job-migration"
          image: {{ include "job-migration.image" . }}
          imagePullPolicy: {{ .Values.migration.image.pullPolicy }}
          resources:
            {{- toYaml .Values.migration.resources | nindent 12 }}
          command: ["bash"]
          args: ["/data/job/exec/startup.sh"]
          env:
            - name: BK_JOB_SLEEP_SECONDS_BEFORE_MIGRATION
              value: {{ .Values.job.migration.sleepSecondsBeforeMigration | quote }}
            - name: BK_JOB_SLEEP_SECONDS_AFTER_MIGRATION
              value: {{ .Values.job.migration.sleepSecondsAfterMigration | quote }}
            - name: BK_JOB_MYSQL_HOST
              value: {{ include "job.mariadb.host" . | quote }}
            - name: BK_JOB_MYSQL_PORT
              value: {{ include "job.mariadb.port" . | quote }}
            - name: BK_JOB_MYSQL_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{printf "%s-%s" (include "job.fullname" .) "migration-db"}}
                  key: admin-username
            - name: BK_JOB_MYSQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-%s" (include "job.fullname" .) "migration-db" }}
                  key: admin-password
            - name: BK_IAM_APIGATEWAY_URL
              value: {{ .Values.bkIamApiGatewayUrl | quote }}
            - name: BK_JOB_APP_CODE
              value: {{ .Values.appCode | quote }}
            - name: BK_JOB_APP_SECRET
              value: {{ .Values.appSecret | quote }}
            - name: BK_JOB_API_URL
              value: {{ include "job.web.api.url" . }}
            - name: BK_JOB_MIGRATION_MYSQL_SCHEMA_ENABLED
              value: {{ .Values.job.migration.mysqlSchema.enabled | quote }}
            - name: BK_JOB_MIGRATION_IAM_MODEL_ENABLED
              value: {{ .Values.job.migration.iamModel.enabled | quote }}
            {{- if .Values.job.migration.mysqlSchema.extraOptions }}
            - name: BK_JOB_MYSQL_EXTRA_OPTIONS
              value: {{ .Values.job.migration.mysqlSchema.extraOptions | quote }}
            {{- end }}
      {{- if and (not .Values.mariadb.enabled) (.Values.job.migration.mysqlSchema.tls.enabled) }}
            - name: BK_JOB_TLS_OPTIONS
              value: {{ include "job.migration.mysqlSchema.tlsOptions" . | quote }}
          volumeMounts:
            - name : mariadb-certs
              mountPath : {{ include "job.migration.mysqlSchema.certsDir" . }}
              readOnly : true
      volumes:
        - name : mariadb-certs
          secret :
            secretName : {{ .Values.job.migration.mysqlSchema.tls.existingSecret }}
      {{- end }}
      restartPolicy: Never
{{- end }}
