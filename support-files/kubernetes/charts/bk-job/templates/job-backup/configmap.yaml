{{- if and .Values.backupConfig.enabled (eq .Values.deploy.mode "mocroservice") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-backup
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: "job-backup"
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
data:
  application.yaml: |-
    spring:
      cloud:
        stream:
          defaultBinder: jobCommon
          binders:
            jobCommon:
              type: rabbit
              environment:
                spring:
                  rabbitmq:
                    host: {{ include "job.rabbitmq.host" . }}
                    port: {{ include "job.rabbitmq.port" . }}
                    username: {{ include "job.rabbitmq.username" . }}
                    {{ if .Values.externalRabbitMQ.existingPasswordSecret }}
                    password: {{ .Values.externalRabbitMQ.existingPasswordKey | default "rabbitmq-password" | printf "${%s}" }}
                    {{- else -}}
                    password: ${rabbitmq-password}
                    {{- end }}
                    virtual-host: {{ include "job.rabbitmq.vhost" . }}
      datasource:
        job-backup:
          driver-class-name: {{ include "job.jdbcMysqlDriverClass" . }}
          type: com.zaxxer.hikari.HikariDataSource
          jdbc-url: {{ include "job.jdbcMysqlScheme" . }}://{{- include "job.mariadb.host" . }}:{{- include "job.mariadb.port" . }}/job_backup{{ include "job.mariadb.connection.properties" . }}
          username: {{ include "job.mariadb.username" . }}
          {{ if .Values.externalMariaDB.existingPasswordSecret }}
          password: {{ .Values.externalMariaDB.existingPasswordKey | default "mariadb-password" | printf "${%s}" }}
          {{- else -}}
          password: ${mariadb-password}
          {{- end }}
          maximum-pool-size: 20
          minimum-idle: 5
          idle-timeout: 600000
          poolName: "job-backup"
          validationTimeout: 5000
        job-execute:
          driver-class-name: {{ include "job.jdbcMysqlDriverClass" . }}
          type: com.zaxxer.hikari.HikariDataSource
          jdbc-url: {{ include "job.jdbcMysqlScheme" . }}://{{- include "job.mariadb.host" . }}:{{- include "job.mariadb.port" . }}/job_execute{{ include "job.mariadb.connection.properties" . }}
          username: {{ include "job.mariadb.username" . }}
          {{ if .Values.externalMariaDB.existingPasswordSecret }}
          password: {{ .Values.externalMariaDB.existingPasswordKey | default "mariadb-password" | printf "${%s}" }}
          {{- else -}}
          password: ${mariadb-password}
          {{- end }}
          maximum-pool-size: 10
          minimum-idle: 2
          idle-timeout: 6000
          poolName: "job-execute"
          validationTimeout: 5000
        job-execute-archive:
          driver-class-name: {{ include "job.jdbcMysqlDriverClass" . }}
          type: com.zaxxer.hikari.HikariDataSource
          jdbc-url: {{ include "job.jdbcMysqlScheme" . }}://{{- include "job.mariadb.host" . }}:{{- include "job.mariadb.port" . }}/job_execute{{ include "job.mariadb.connection.properties" . }}
          username: {{ include "job.mariadb.username" . }}
          {{ if .Values.externalMariaDB.existingPasswordSecret }}
          password: {{ .Values.externalMariaDB.existingPasswordKey | default "mariadb-password" | printf "${%s}" }}
          {{- else -}}
          password: ${mariadb-password}
          {{- end }}
          maximum-pool-size: 10
          minimum-idle: 2
          idle-timeout: 6000
          poolName: "job-execute-archive"
          validationTimeout: 5000
      redis:
      {{- include "job.redis.config" . | indent 8 }}
        database: 0
        lettuce:
          pool:
            min-idle: 5
            max-idle: 10
            max-active: 8
            max-wait: 1ms
          shutdown-timeout: 100ms
      servlet:
        multipart:
          max-file-size: 5GB
          max-request-size: 5GB
    ribbon:
      ReadTimeout: 60000
      ConnectTimeout: 10000
      eureka:
        enabled: false
    server:
      port: {{ .Values.backupConfig.containerPort }}
    job:
      backup:
        storage-backend: {{ .Values.backupConfig.storageBackend }}
        artifactory:
          repo: {{ .Values.backupConfig.artifactory.repo }}
        # DB 归档配置
        archive-db:
          # job-execute db 归档配置
          execute:
            # 是否启用 DB 归档
            enabled: false
            # 触发时间 CRON 表达式
            cron: 0 0 4 * * *
            # DB 原始数据保留天数
            keep-days: 365
            backup:
              # 是否启用 DB 数据备份，job.backup.archive-db.execute.enabled=true 的时候该配置项才会生效
              enabled: false
{{- end }}
