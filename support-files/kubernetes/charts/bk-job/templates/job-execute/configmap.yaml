{{- if .Values.executeConfig.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-execute
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: "job-execute"
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
data:
  application.yaml: |-
    spring:
      cloud:
        stream:
          bindings:
            taskInput:
              destination: task
              group: service.job.execute
              consumer:
                concurrency: 5
            taskOutput:
              destination: task
              group: service.job.execute
              consumer:
                concurrency: 5
            stepInput:
              destination: step
              group: service.job.execute
              consumer:
                concurrency: 5
            stepOutput:
              destination: step
              group: service.job.execute
              consumer:
                concurrency: 5
            gseTaskInput:
              destination: gse.task
              group: service.job.execute
              consumer:
                concurrency: 10
            gseTaskOutput:
              destination: gse.task
              group: service.job.execute
              consumer:
                concurrency: 10
            taskResultHandleResumeInput:
              destination: result.handle.task.resume
              group: service.job.execute
              consumer:
                concurrency: 5
            taskResultHandleResumeOutput:
              destination: result.handle.task.resume
              group: service.job.execute
              consumer:
                concurrency: 5
            notifyMsgInput:
              destination: notify.msg
              group: service.job.execute
              consumer:
                concurrency: 5
            notifyMsgOutput:
              destination: notify.msg
              group: service.job.execute
              consumer:
                concurrency: 5
            callbackInput:
              destination: task.callback
              group: service.job.execute
              consumer:
                concurrency: 5
            callbackOutput:
              destination: task.callback
              group: service.job.execute
              consumer:
                concurrency: 5
            taskStatisticsInput:
              destination: statistics.task
              group: service.job.execute
              consumer:
                concurrency: 5
            taskStatisticsOutput:
              destination: statistics.task
              group: service.job.execute
              consumer:
                concurrency: 5
          rabbit:
            bindings:
              taskInput:
                consumer:
                  maxConcurrency: 10
              taskOutput:
                consumer:
                  maxConcurrency: 10
              stepInput:
                consumer:
                  maxConcurrency: 10
              stepOutput:
                consumer:
                  maxConcurrency: 10
              gseTaskInput:
                consumer:
                  maxConcurrency: 20
              gseTaskOutput:
                consumer:
                  maxConcurrency: 20
              taskResultHandleResumeInput:
                consumer:
                  maxConcurrency: 10
              taskResultHandleResumeOutput:
                consumer:
                  maxConcurrency: 10
              notifyMsgInput:
                consumer:
                  maxConcurrency: 10
              notifyMsgOutput:
                consumer:
                  maxConcurrency: 10
              callbackInput:
                consumer:
                  maxConcurrency: 10
              callbackOutput:
                consumer:
                  maxConcurrency: 10
              taskStatisticsInput:
                consumer:
                  maxConcurrency: 10
              taskStatisticsOutput:
                consumer:
                  maxConcurrency: 10
      datasource:
        job-execute:
          driver-class-name: {{ include "job.jdbcMysqlDriverClass" . }}
          type: com.zaxxer.hikari.HikariDataSource
          jdbc-url: {{ include "job.jdbcMysqlScheme" . }}://{{- include "job.mariadb.host" . }}:{{- include "job.mariadb.port" . }}/job_execute?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
          username: {{ include "job.mariadb.username" . }}
          {{ if .Values.externalMariaDB.existingPasswordSecret }}
          password: {{ .Values.externalMariaDB.existingPasswordKey | default "mariadb-password" | printf "${%s}" }}
          {{- else -}}
          password: ${mariadb-password}
          {{- end }}
          maximum-pool-size: 100
          minimum-idle: 20
          idle-timeout: 600000
          poolName: "job-execute"
          validationTimeout: 5000
      rabbitmq:
        host: {{ include "job.rabbitmq.host" . }}
        port: {{ include "job.rabbitmq.port" . }}
        username: {{ include "job.rabbitmq.username" . }}
        {{ if .Values.externalRabbitMQ.existingPasswordSecret }}
        password: {{ .Values.externalRabbitMQ.existingPasswordKey | default "rabbitmq-password" | printf "${%s}" }}
        {{- else -}}
        password: ${rabbitmq-password}
        {{- end }}
        virtual-host: {{ include "job.rabbitmq.vhost" . }}
      redis:
        {{- include "job.redis.config" . | indent 8 }}
        database: 0
        lettuce:
          pool:
            min-idle: 5
            max-idle: 10
            max-active: 20
            max-wait: 10ms
          shutdown-timeout: 100ms
    server:
      port: {{ .Values.executeConfig.containerPort }}
    feign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 5000
          sync:
            connectTimeout: 5000
            readTimeout: 30000
          log:
            connectTimeout: 5000
            readTimeout: 30000
    log-export:
      storage-backend: {{ .Values.executeConfig.logExport.storageBackend }}
      artifactory:
        repo: {{ .Values.executeConfig.logExport.artifactory.repo }}
    job:
      execute:
        iam:
          {{- toYaml .Values.executeConfig.iam | nindent 10 }}
{{- end }}
