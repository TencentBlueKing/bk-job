{{- if .Values.crontabConfig.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-crontab
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: "job-crontab"
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
data:
  application.yaml: |-
    spring:
      datasource:
        job-crontab:
          driver-class-name: {{ include "job.jdbcMysqlDriverClass" . }}
          type: com.zaxxer.hikari.HikariDataSource
          jdbc-url: {{ include "job.jdbcMysqlScheme" . }}://{{- include "job.mariadb.host" . }}:{{- include "job.mariadb.port" . }}/job_crontab?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
          username: {{ include "job.mariadb.username" . }}
          {{ if .Values.externalMariaDB.existingPasswordSecret }}
          password: {{ .Values.externalMariaDB.existingPasswordKey | default "mariadb-password" | printf "${%s}" }}
          {{- else -}}
          password: ${mariadb-password}
          {{- end }}
          maximum-pool-size: 20
          minimum-idle: 5
          idle-timeout: 600000
          poolName: "job-crontab"
          validationTimeout: 5000
      rabbitmq:
        host: {{ include "job.rabbitmq.host" . }}
        port: {{ include "job.rabbitmq.port" . }}
        username: {{ include "job.rabbitmq.username" . }}
        {{ if .Values.externalRabbitMQ.existingPasswordSecret }}
        password: {{ .Values.externalRabbitMQ.existingPasswordKey | default "rabbitmq-password" | printf "${%s}" }}
        {{- else -}}
        password: ${rabbitmq-password}
        {{- end }}
        virtual-host: {{ include "job.rabbitmq.vhost" . }}
      redis:
        {{- include "job.redis.config" . | indent 8 }}
        database: 0
        lettuce:
          pool:
            min-idle: 5
            max-idle: 10
            max-active: 8
            max-wait: 1ms
          shutdown-timeout: 100ms
      quartz:
        job-store-type: jdbc
        jdbc:
          initialize-schema: never
        thread-pool:
          thread-name-prefix: QuartzThreadPoolTaskExecutor-
          thread-priority: 5
          daemon: false
          thread-group-name: QuartzThreadPoolTaskExecutorGroup
          core-pool-size: 150
          max-pool-size: 300
          keep-alive-seconds: 60
          queue-capacity: 150
          allow-core-thread-timeout: false
          waitfor-tasks-tocomplete-onshutdown: true
          await-termination-seconds: 900
        scheduler:
          config-location: classpath:quartz.properties
          scheduler-name: quartz-scheduler
          application-context-scheduler-contextkey: applicationContext
          overwrite-existing-jobs: true
          auto-startup: true
          startup-delay: 10
        properties:
          org:
            quartz:
              scheduler:
                batchTriggerAcquisitionMaxCount: 150
              threadPool:
                threadCount: 150
    ribbon:
      ReadTimeout: 120000
      ConnectTimeout: 10000
      eureka:
        enabled: false
    notification-policy:
      failed:
        start:
          begin: {{ .Values.crontabConfig.notificationPolicy.failed.start.begin | default 1 }}
          frequency: {{ .Values.crontabConfig.notificationPolicy.failed.start.frequency | default 5 }}
          total: {{ .Values.crontabConfig.notificationPolicy.failed.start.total | default -1 }}
    server:
      port: {{ .Values.crontabConfig.containerPort }}
{{- end }}
