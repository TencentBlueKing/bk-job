apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-common
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: "job-common"
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
data:
  application.yaml: |-
    spring:
      security:
        user:
          name: {{ .Values.job.security.actuator.user.name }}
          password: {{ .Values.job.security.actuator.user.password }}
          roles: ENDPOINT_ADMIN
      sleuth:
        otel:
          exporter:
            enabled: {{ .Values.job.trace.report.enabled }}
            otlp:
              endpoint: {{ .Values.job.trace.report.pushUrl }}
          resource:
            bkDataToken: {{ .Values.job.trace.report.secureKey }}
          config:
            traceIdRatioBased: {{ .Values.job.trace.report.ratio }}
    bk:
      bkDomain: {{ .Values.global.bkDomain }}
    app:
      code: {{ .Values.appCode }}
      secret: {{ .Values.appSecret }}
    esb:
      service:
        url: {{ .Values.bkComponentApiUrl }}
        publicUrl: {{ .Values.bkComponentApiUrl }}
    bkApiGateway:
      gse:
        url: {{ .Values.bkGseApiGatewayUrl }}
      bkNotice:
        url: {{ .Values.bkNoticeApiGatewayUrl }}
    gse:
      enabled: {{ .Values.gse.enabled }}
      cache:
        apiserver:
          host: {{ .Values.gse.cacheApiServer.host }}
          port: {{ .Values.gse.cacheApiServer.port }}
      ssl:
        enabled: {{ .Values.gse.ssl.enabled }}
        keystore:
          password: ${gse.keystore.password}
          path: "/data/job/cert/gse_job_api_client.keystore"
        truststore:
          manager-type: SunX509
          password: ${gse.truststore.password}
          store-type: JKS
          path: "/data/job/cert/gse_job_api_client.truststore"
      taskserver:
        host: {{ .Values.gse.taskserver.host }}
        port: {{ .Values.gse.taskserver.port }}
      server:
        discovery:
          type: {{ .Values.gse.server.discovery.type }}
        zookeeper:
          connect:
            string: {{ .Values.gse.server.zookeeper.connect.string }}
      query:
        {{- toYaml .Values.gse.query | nindent 8 }}
      script:
        rootPath: {{ .Values.gse.script.rootPath }}
    iam:
      web-url: {{ .Values.bkIamUrl }}
      base-url: {{ .Values.bkIamApiUrl }}
      system-id: {{ .Values.iam.systemId }}
    audit:
      enabled: {{ .Values.audit.enabled }}
      system-id: {{ .Values.audit.systemId }}
    paas:
      server:
        url: {{ .Values.bkPaasUrl }}
      login:
        {{- if .Values.login.custom.enabled }}
        custom:
          enabled: {{ .Values.login.custom.enabled }}
          login-url: {{ .Values.login.custom.loginUrl }}
          api-url: {{ .Values.login.custom.apiUrl }}
          token-name: {{ .Values.login.custom.tokenName }}
        {{- else }}
        url: {{ .Values.bkLoginUrl }}
        {{- end }}
    bkNotice:
      enabled: {{ .Values.bkNotice.enabled }}
    job:
      security:
        service:
          private-key-base64: {{ .Values.job.security.privateKeyBase64 }}
          public-key-base64: {{ .Values.job.security.publicKeyBase64 }}
      edition: {{ .Values.job.edition }}
      encrypt:
        type: {{ .Values.job.encrypt.type }}
        password: {{ .Values.job.encrypt.password }}
      web:
        url: {{ include "job.web.url" . }}
      storage:
        root-path: {{ .Values.persistence.localStorage.path }}/local
    cmdb:
      default:
        supplier:
          account: {{ .Values.cmdb.supplierAccount }}
      app:
        index:
          path: {{ .Values.cmdb.app.index.path }}
      interface:
        briefCacheTopo:
          enabled: {{ .Values.cmdb.interface.briefCacheTopo.enabled }}
        findHostRelation:
          longTerm:
            concurrency: {{ .Values.cmdb.interface.findHostRelation.longTerm.concurrency }}
        flowControl:
          default:
            limit: {{ .Values.cmdb.interface.flowControl.default.limit }}
          enabled: {{ .Values.cmdb.interface.flowControl.enabled }}
        retry:
          enabled: {{ .Values.cmdb.interface.retry.enabled }}
      query:
        threads:
          num: {{ .Values.cmdb.query.threads.num }}
      server:
        url: {{ .Values.bkCmdbUrl }}
    nodeman:
      server:
        url: {{ .Values.bkNodemanUrl }}
    artifactory:
      base-url: {{ .Values.bkRepoUrl }}
      admin:
        username: {{ .Values.artifactory.admin.username }}
        password: {{ .Values.artifactory.admin.password }}
      job:
        username: {{ .Values.artifactory.job.username }}
        password: {{ .Values.artifactory.job.password }}
        project: {{ .Values.artifactory.job.project }}
    local-file:
      storage-backend: {{ .Values.localFile.storageBackend }}
      artifactory:
        download:
          concurrency: {{ .Values.localFile.artifactory.download.concurrency }}
        repo: {{ .Values.localFile.artifactory.repo }}
    swagger:
      url: {{ .Values.swagger.url }}
    management:
      metrics:
        tags:
          application: ${spring.application.name}
    log:
      # 服务后台日志保留的小时数，默认48小时（2天）
      keep-hours: {{ .Values.log.keepHours }}
      # 根据磁盘占用量自动清理后台日志相关配置
      clear-by-volume-usage:
        # 是否开启自动清理任务，默认开启
        enabled: {{ .Values.log.clearByVolumeUsage.enabled }}
        # 服务后台日志可使用的最大磁盘空间（超出后将清理最旧的日志文件），单位支持B、KB、MB、GB、TB、PB，默认40GB
        max-volume: {{ .Values.log.clearByVolumeUsage.maxVolume }}
